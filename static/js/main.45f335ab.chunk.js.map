{"version":3,"sources":["assets/img/womakerscode-com-bg.png","assets/img/womakerscode-sem-bg.png","Routes.js","components/Navbars/IndexNavbar.js","components/Footers/DemoFooter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","React","lazy","NotFound","SolicitaChaveAcesso","VerificaChaveAcesso","Evento","Participantes","Participante","CadastroConta","AcessoConta","Perfil","CadastroEvento","PoliticaPrivacidade","TermoUso","Routes","fallback","exact","path","component","routerProps","IndexNavbar","useState","navbarColor","setNavbarColor","navbarCollapse","setNavbarCollapse","useEffect","updateNavbarColor","document","documentElement","scrollTop","body","window","addEventListener","removeEventListener","Navbar","className","classnames","expand","Container","NavbarBrand","data-placement","href","title","src","logo","logoSemBg","alt","aria-expanded","toggled","onClick","classList","toggle","Collapse","navbar","isOpen","Nav","NavItem","NavLink","to","tag","Link","Button","color","DemoFooter","Row","Date","getFullYear","App","id","Boolean","location","hostname","match","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.45f335ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/womakerscode-com-bg.a4537f6e.png\";","module.exports = __webpack_public_path__ + \"static/media/womakerscode-sem-bg.3a842d98.png\";","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nconst Home = React.lazy(() => import('./pages/Home'));\r\nconst NotFound = React.lazy(() => import('./pages/NotFound'));\r\nconst SolicitaChaveAcesso = React.lazy(() => import('./pages/SolicitaChaveAcesso'));\r\nconst VerificaChaveAcesso = React.lazy(() => import('./pages/VerificaChaveAcesso'));\r\nconst Evento = React.lazy(() => import('./pages/Evento'));\r\nconst Participantes = React.lazy(() => import('./pages/Participantes'));\r\nconst Participante = React.lazy(() => import('./pages/Participante'));\r\nconst CadastroConta = React.lazy(() => import('./pages/CadastroConta'));\r\nconst AcessoConta = React.lazy(() => import('./pages/AcessoConta'));\r\nconst Perfil = React.lazy(() => import('./pages/Perfil'));\r\nconst CadastroEvento = React.lazy(() => import('./pages/CadastroEvento'));\r\nconst PoliticaPrivacidade = React.lazy(() => import('./pages/PoliticaPrivacidade'));\r\nconst TermoUso = React.lazy(() => import('./pages/TermoUso'));\r\n\r\nconst Routes = () => (\r\n    <Suspense fallback=\"Loading...\">\r\n        <Switch>\r\n            <Route exact path='/' component={routerProps => <Home {...routerProps} />} />\r\n            \r\n            <Route exact path='/not-found'component={routerProps => <NotFound {...routerProps} />} />\r\n            \r\n            <Route exact path='/solicitar-chave-de-acesso'component={routerProps => <SolicitaChaveAcesso {...routerProps} />} />\r\n            \r\n            <Route exact path='/verificar-chave-de-acesso'component={routerProps => <VerificaChaveAcesso {...routerProps} />} />\r\n            \r\n            <Route exact path='/evento/:empresaId/:eventoId'component={routerProps => <Evento {...routerProps} />} />\r\n\r\n            <Route exact path='/participantes/:empresaId'component={routerProps => <Participantes {...routerProps} />} />\r\n            \r\n            <Route exact path='/participante/:empresaId/:eventoId/:participanteId'component={routerProps => <Participante {...routerProps} />} />\r\n            \r\n            <Route exact path='/cadastrar-conta'component={routerProps => <CadastroConta {...routerProps} />} />\r\n            \r\n            <Route exact path='/acessar-conta'component={routerProps => <AcessoConta {...routerProps} />} />\r\n            \r\n            <Route exact path='/perfil'component={routerProps => <Perfil {...routerProps} />} />\r\n            \r\n            <Route exact path='/cadastrar-evento'component={routerProps => <CadastroEvento {...routerProps} />} />\r\n            \r\n            <Route exact path='/politica-de-privacidade'component={routerProps => <PoliticaPrivacidade {...routerProps} />} />\r\n            \r\n            <Route exact path='/termo-de-uso'component={routerProps => <TermoUso {...routerProps} />} />\r\n            \r\n            <Route exact path='*'component={routerProps => <NotFound {...routerProps} />} />\r\n\r\n        </Switch>\r\n    </Suspense>\r\n)\r\n\r\nexport default Routes;","/*!\r\n\r\n=========================================================\r\n* Paper Kit React - v1.0.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/paper-kit-react\r\n\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/paper-kit-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n// nodejs library that concatenates strings\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../assets/img/womakerscode-com-bg.png\";\r\nimport logoSemBg from \"../../assets/img/womakerscode-sem-bg.png\";\r\nimport './style.css'\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Container\r\n} from \"reactstrap\";\r\n\r\nfunction IndexNavbar() {\r\n  const [navbarColor, setNavbarColor] = React.useState(\"navbar-transparent\");\r\n  const [navbarCollapse, setNavbarCollapse] = React.useState(false);\r\n\r\n  const toggleNavbarCollapse = () => {\r\n    setNavbarCollapse(!navbarCollapse);\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const updateNavbarColor = () => {\r\n      if (\r\n        document.documentElement.scrollTop > 299 ||\r\n        document.body.scrollTop > 299\r\n      ) {\r\n        setNavbarColor(\"\");\r\n      } else if (\r\n        document.documentElement.scrollTop < 300 ||\r\n        document.body.scrollTop < 300\r\n      ) {\r\n        setNavbarColor(\"navbar-transparent\");\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", updateNavbarColor);\r\n\r\n    return function cleanup() {\r\n      window.removeEventListener(\"scroll\", updateNavbarColor);\r\n    };\r\n  });\r\n  return (\r\n    <Navbar className={classnames(\"fixed-top\", navbarColor)} expand=\"lg\">\r\n      <Container>\r\n        <div className=\"navbar-translate\">\r\n          <NavbarBrand\r\n            data-placement=\"bottom\"\r\n            href=\"/cv-speed-hiring\"\r\n            title=\"Logotipo WoMakersCode\">\r\n              <img src={navbarColor === 'navbar-transparent' ? logo : logoSemBg} className=\"logo\" alt=\"Logotipo da organização WoMakersCode\"></img>\r\n          </NavbarBrand>\r\n          <button\r\n            aria-expanded={navbarCollapse}\r\n            className={classnames(\"navbar-toggler navbar-toggler\", {\r\n              toggled: navbarCollapse\r\n            })}\r\n            onClick={toggleNavbarCollapse}\r\n          >\r\n            <span className=\"navbar-toggler-bar bar1\" />\r\n            <span className=\"navbar-toggler-bar bar2\" />\r\n            <span className=\"navbar-toggler-bar bar3\" />\r\n          </button>\r\n        </div>\r\n        <Collapse\r\n          className=\"justify-content-end\"\r\n          navbar\r\n          isOpen={navbarCollapse}\r\n        >\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink to=\"/sobre\" tag={Link}>\r\n                Sobre\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/faq\" tag={Link}>\r\n                FAQ\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/acessar-conta\" tag={Link}>\r\n                Entrar\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <Button\r\n                className=\"btn-round\"\r\n                color=\"danger\"\r\n                href=\"/cadastrar-conta\"\r\n              >\r\n                cadastrar\r\n              </Button>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default IndexNavbar;\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Container } from \"reactstrap\";\r\nimport \"./style.css\";\r\n\r\nfunction DemoFooter() {\r\n  return (\r\n    <Container>\r\n      <footer className=\"footer footer-black footer-white\">\r\n        <Row>\r\n          <nav className=\"footer-nav\">\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/sobre\">Sobre</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/faq\">FAQ</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/politica-de-privacidade\">Política de privacidade</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/termo-de-uso\">Termo de uso</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <div className=\"credits ml-auto\">\r\n            <span className=\"copyright\">\r\n              © {new Date().getFullYear()}, made with{\" \"}\r\n              <i className=\"fa fa-heart heart\" /> by speed hiring\r\n            </span>\r\n          </div>\r\n        </Row>\r\n      </footer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default DemoFooter;\r\n","import React from 'react';\r\nimport Routes from './Routes';\r\nimport './App.css';\r\n\r\nimport IndexNavbar from \"./components/Navbars/IndexNavbar.js\";\r\nimport DemoFooter from \"./components/Footers/DemoFooter.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <IndexNavbar />\r\n      <main id=\"main\">\r\n        <Routes />\r\n      </main>\r\n      <DemoFooter />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Suspense } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport \"./assets/css/bootstrap.min.css\";\r\nimport \"./assets/css/paper-kit.css\";\r\nimport './index.css';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Suspense fallback={null}>\r\n        <BrowserRouter basename=\"/cv-speed-hiring\">\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Suspense>,\r\n    document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}